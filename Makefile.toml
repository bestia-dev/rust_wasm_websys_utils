# rust_wasm_websys_utils/Makefile.toml
#https://github.com/sagiegurari/cargo-make/blob/master/src/lib/Makefile.stable.toml

[config]
skip_core_tasks = true

#region: public callable tasks/flows

    [tasks.default]
    description = "show list of public callable tasks"
    clear = true
	dependencies = [
        "help_command_order"
    ]

	[tasks.check]
    description = "cargo check --release"
    clear = true
    command = "cargo"
    args = ["check","--release"]

    [tasks.dev]
    description = "cargo build development"
    clear=true
    dependencies = [
        "build_dev"
		]

    [tasks.release]
    description = "cargo build release"
    clear=true
    dependencies = [
		# Binaries version is date
        # "lmake_version_from_date",
        # Library version is semver
        "semver_increment_patch",	
        "build_release",
    ]

    [tasks.fmt]
    description = "cargo fmt - format code"
    clear = true
    dependencies = [
        "cargo_fmt", 
    ]

    [tasks.test]
    description = "cargo test --release"
    clear = true
    script = [
        "printf $ cargo test --release",
        "cargo test --release",
        "printf $ wasm-pack test --chrome",
        "wasm-pack test --chrome",
    ]

    [tasks.audit]
    description = "cargo audit - for warning dependencies"
    clear = true
    dependencies = [
        "cargo_audit",		   
    ]

    [tasks.doc]
    description = "cargo doc - create docs from doc comments"
    clear=true
    dependencies = [
        "include_readme",
        "cargo_doc",
        "doc_copy",
    ]

    [tasks.sshadd]
    description = "adds identity to ssh-agent for git and publish operations"
    clear = true
    script = [
        "ssh-add /home/luciano/.ssh/luciano_googlecloud",
        "ssh-add /home/luciano/.ssh/lucianobestia_mac",
        "ssh-add -l",
    ]

    [tasks.gitpush]
    description = "push the commits to github, uses ssh agent"
    clear = true
    script = [
        "git push",
    ]

	[tasks.crates_io_dry_run]
	clear = true
	description = "prepare before publishing to crates.io with dry-run"
	command = "cargo"
	args = ["publish","--dry-run"]

    [tasks.crates_io_publish]
	clear = true
	description = "gittag and publish to crates.io"
    dependencies = [
		"gittag",
        "private_crates_io_publish",
    ] 

    [tasks.increment_minor]
    description = "increments semver minor"
    clear = true
    script = [
        "lmake_semver --increment=minor",
    ]
	
#endregion

[tasks.help_command_order]
clear = true
private = true
description = "help developer to understand the order of exec commands"
script= [
"printf ",
"printf ORDER OF EXECUTING MAKE TASKS:",
"printf     clear - clear the screen",
"printf     cargo make - this list",
"printf 01. ..... change your code in the editor",
"printf 02. cargo make dev - build developer versions",
"printf 03. ......run the developer build. Cargo make tasks LIST is below.",
"printf 04. cargo make test - test the test code",
"printf 05. cargo make increment_minor - if needed increment semver minor",
"printf 06. cargo make release - build release version, increment semver patch incargo.toml",
"printf 07. ......run the release build. Cargo make tasks LIST is below.",
"printf ",
"printf 08. cargo make doc - includes from cargo.toml to readme.md and from readme.md to main.rs or lib.rs, generates doc and copies to docs folder.",
"printf 09. ..... run a git commit",
"printf 10. cargo make sshadd - run only once - adds identity to ssh-agent for git and publish",
"printf 11. cargo make gitpush - git push",
"printf 12. cargo make crates_io_dry_run - prepare publishing for crates.io",
"printf 13. cargo make crates_io_publish - gittag and publish to crates.io",
"printf ",
"printf LIST RUN WITH ARGUMENTS - release build",
"printf cargo make run_rel1 - target/release/${CARGO_MAKE_CRATE_NAME}",
"printf "
]

[tasks.build_dev]
clear=true
private=true
description = "build in dev mode"			  
command = "cargo"
args = ["build"]

# Libraries version are semver, but binaries are dates.
[tasks.semver_increment_patch]
clear = true
private = true
description = "increment semver patch"
script= ["lmake_semver --increment=patch"]

# Binaries version are dates, but Libraries are semver.
# For PWA must update version also in the service_worker.js.
[tasks.lmake_version_from_date]
description = "in cargo.toml change version to today date"
clear = true
private = true
script= ["lmake_version_from_date"]
				 
[tasks.build_release]
description = "build for release"					 
clear=true
private=true
command = "cargo"
args = ["build","--release"]

[tasks.cargo_audit]
description = "cargo audit - no cargo.lock for library?"
clear = true
private = true
#command = "cargo"
#args = ["audit"]

[tasks.cargo_fmt]
description = "cargo fmt"
clear = true
private = true
command = "cargo"
args = ["fmt"]

[tasks.include_readme]
clear = true
private = true
description = "copy the content of readme.md into *.rs comments (for the docs)"
script= ["lmake_readme"]

[tasks.cargo_doc]
clear = true
private = true
description = "call cargo doc"
command="cargo"
args=["doc","--no-deps","--document-private-items"]

[tasks.doc_copy]
clear = true
private = true
description = "copy doc folder as docs (out of folder target), so it can be git comitted"
script = [
    "\\rsync -avz --delete-after target/doc/*  docs/"
]

[tasks.gittag]
clear = true
private = true
description = "git tag -a v${CARGO_MAKE_CRATE_VERSION} -m version_${CARGO_MAKE_CRATE_VERSION}"
script = [
	"printf git tag -a v${CARGO_MAKE_CRATE_VERSION} -m version_${CARGO_MAKE_CRATE_VERSION}",
    "git tag -a v${CARGO_MAKE_CRATE_VERSION} -m version_${CARGO_MAKE_CRATE_VERSION}"
]		  

[tasks.private_crates_io_publish]
clear = true
private = true
description = "publish to crates.io."
command = "cargo"
args = ["publish"]
